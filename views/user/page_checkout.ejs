<!DOCTYPE html>
<html class="no-js" lang="en">


<!-- Mirrored from wp.alithemes.com/html/evara/evara-frontend/shop-checkout.html by HTTrack Website Copier/3.x [XR&CO'2014], Sat, 15 Jul 2023 10:10:07 GMT -->

<head>
    <meta charset="utf-8">
    <title>Sleek style Men's fashion store</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta property="og:title" content="">
    <meta property="og:type" content="">
    <meta property="og:url" content="">
    <meta property="og:image" content="">
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon"
        href="/public/userAssets//public/userAssets/assets/imgs/theme/favicon.svg">
    <!-- Template CSS -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" href="/public/userAssets/assets/css/maind134.css?v=3.4">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <!---Razorpay CDN -->
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
</head>

<body>

    <!-- header -->
    <%-include('./header')-%>
        <main class="main">
            <div class="page-header breadcrumb-wrap">
                <div class="container">
                    <div class="breadcrumb">
                        <a href="/" rel="nofollow">Home</a>
                        <span></span> <a href="/shop">Shop</a>
                        <span></span> Checkout
                    </div>
                </div>
            </div>
            <section class="mt-50 mb-50">
                <div class="container">
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="toggle_info">
                                <span><i class="fi-rs-label mr-10"></i><span class="text-muted">Have a coupon?</span> <a
                                        href="#coupon" data-bs-toggle="collapse" class="collapsed"
                                        aria-expanded="false">Click here to enter your code</a></span>
                            </div>
                            <div class="panel-collapse collapse coupon_form " id="coupon">
                                <div class="panel-body">
                                    <p class="mb-30 font-sm">If you have a coupon code, please apply it below.</p>
                                    <form id="couponFormId">
                                        <div class="form-group">
                                            <input id="couponCodeId" type="text" placeholder="Enter Coupon Code...">
                                        </div>
                                        <div class="form-group d-flex gap-3">
                                            <button id="applyCouponBtnId" class="btn btn-md" type="button"
                                                onclick="applyCoupon()" name="login">Apply Coupon</button>
                                            <button id="showCouponBtnId" class="btn btn-md " type="button"
                                                data-bs-toggle="modal" data-bs-target="#couponModal">Show
                                                Coupons</button>
                                            <button id="removeCouponBtnId" style="display: none;" class="btn btn-md"
                                                type="button" onclick="window.location.reload()">Remove coupon</button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Modal -->
                    <div class="modal fade" id="couponModal" tabindex="-1" aria-labelledby="couponModalLabel"
                        aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="couponModalLabel">Available Coupons</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"
                                        aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <div class="coupon-list">
                                        <% let validCoupons=coupons.filter(item=> new Date(item.expiryDate) >=
                                            Date.now() && !item.redeemedUser.includes(user._id));
                                            if (validCoupons.length > 0) {
                                            validCoupons.forEach(item => {
                                            %>
                                            <div class="coupon-item d-flex justify-content-between">
                                                <p>Coupon Code: <span class="coupon-code">
                                                        <%= item.code %>
                                                    </span></p>
                                                <button style="background:none; border: none;" class="copy-btn"
                                                    data-coupon="<%= item.code %>">Copy</button>
                                            </div>
                                            <% }); } else { %>
                                                <h4 class="d-flex justify-content-center">No coupons available</h4>
                                                <% } %>
                                    </div>

                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary"
                                        data-bs-dismiss="modal">Close</button>
                                </div>

                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-12">
                            <div class="divider mt-50 mb-50"></div>
                        </div>
                    </div>
                    <div class="row">
                        <a href="/checkout/add_address?userId=<%=user._id %>"><i class="bi bi-plus-lg"></i>Add new
                            address</a>
                        <div class="col-md-6">
                            <div class="row">
                                <% if(user_address && user_address.addresses.length> 0){ %>
                                    <% user_address.addresses.slice(0, 2).forEach((data, index)=> { %>
                                        <div class="col-md-6 col-12 mb-3 address-card">
                                            <div class="card mb-3 mb-lg-0">
                                                <div class="card-header d-flex justify-content-between">
                                                    <h5 class="mb-0">Billing Address</h5>
                                                    <input type="radio" class="radioBtn" value="<%=data._id%>"
                                                        onclick="handleSelectAddress(this,'<%=data._id%>')"
                                                        name="option" <% if(index==0){ %>
                                                    checked
                                                    <% } %>
                                                        style="width:15px; height:15px;">
                                                </div>
                                                <div class="card-body">
                                                    <address>
                                                        <%= data.name %><br>
                                                            <%= data.address %>,<br>
                                                                <%= data.district %>.<br>
                                                                    <%= data.pincode %> <br>
                                                                        <%= data.state %> <br>
                                                                            <%= data.mobile %>
                                                    </address>
                                                    <a href="/checkout/edit_address?addressId=<%=data._id %>"
                                                        class="btn btn-small">Edit</a>
                                                </div>
                                            </div>
                                        </div>
                                        <% }) %>

                                            <% if(user_address.addresses.length> 2) { %>
                                                <div id="moreAddresses" class="collapse">
                                                    <div class="row">
                                                        <% user_address.addresses.slice(2).forEach((data, index)=> { %>
                                                            <div class="col-md-6 col-12 mb-3 address-card">
                                                                <div class="card mb-3 mb-lg-0">
                                                                    <div
                                                                        class="card-header d-flex justify-content-between">
                                                                        <h5 class="mb-0">Billing Address</h5>
                                                                        <input type="radio" name="option"
                                                                            class="radioBtn" value="<%=data._id%>"
                                                                            onclick="handleSelectAddress(this,'<%=data._id%>')"
                                                                            style="width:15px; height:15px;">
                                                                    </div>
                                                                    <div class="card-body">
                                                                        <address id="address_id">
                                                                            <%= data.name %><br>
                                                                                <%= data.address %>,<br>
                                                                                    <%= data.district %>. <br>
                                                                                        <%= data.pincode %> <br>
                                                                                            <%= data.state %> <br>
                                                                                                <%= data.mobile %>
                                                                        </address>
                                                                        <a href="/checkout/edit_address?addressId=<%=data._id %>"
                                                                            class="btn btn-small">Edit</a>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <% }) %>
                                                    </div>
                                                </div>
                                                <div class="col-12 text-center">
                                                    <button style="background-color: white;border: none;color: #088178;"
                                                        class="btn" type="button" id="viewmoreBtnId"
                                                        onclick="changeViewBtnTxt()" data-bs-toggle="collapse"
                                                        data-bs-target="#moreAddresses">
                                                        View More <i class="fas fa-angle-double-down"></i>
                                                    </button>
                                                </div>
                                                <% } %>
                                                    <% } %>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="order_review">
                                <div class="mb-20">
                                    <h4>Your Orders</h4>
                                </div>
                                <div class="table-responsive order_table text-center">
                                    <table class="table">
                                        <thead>
                                            <tr>
                                                <th colspan="2">Product</th>
                                                <th>Total</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <% if(cartData){ %>
                                                <% cartData.items.forEach((data)=>{ %>
                                                    <tr id="product<%=data.productId._id %>">
                                                        <td class="image product-thumbnail"><img
                                                                src="/uploads/<%=data.productId.image[0] %>" alt="#">
                                                        </td>
                                                        <td>
                                                            <h5><a href="shop-product-full.html"></a>
                                                                <%=data.productId.title %>
                                                            </h5> <span class="product-qty">x <%=data.quantity %></span>
                                                        </td>
                                                        <td>Rs <span id="subTotalPriceId">
                                                                <%=data.subTotalPrice %>
                                                            </span>
                                                        </td>
                                                    </tr>

                                                    <% }) %>
                                                        <% } %>


                                                            <tr>
                                                                <th>Shipping</th>
                                                                <td colspan="2"><em>Free Shipping</em></td>
                                                            </tr>
                                                            <tr id="couponPriceRowId" style="display: none;">
                                                                <th>Coupon</th>
                                                                <td colspan="2" id="couponPriceId">Apply coupon</td>
                                                            </tr>
                                                            <tr>
                                                                <th>Total amount</th>
                                                                <td colspan="2" class="product-subtotal"><span
                                                                        class="font-xl text-brand fw-900">
                                                                        Rs <span id="totalPriceId">
                                                                            <%=cartData?cartData.totalPrice:0 %>
                                                                        </span>
                                                                    </span></td>
                                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                                <div class="bt-1 border-color-1 mt-30 mb-30"></div>
                                <div class="payment_method">
                                    <div class="mb-25">
                                        <h5>Payment</h5>
                                    </div>
                                    <div class="payment_option">

                                        <div class="custome-radio">

                                            <input class="form-check-input" <%=cartData.totalPrice>2000?'disabled':''%>
                                            required="" type="radio"
                                            onclick="handlePaymentMethod(this,'cod')" name="payment_option"
                                            id="exampleRadios4" value="cod">
                                            <label class="form-check-label" for="exampleRadios4"
                                                data-bs-toggle="collapse" data-target="#checkPayment"
                                                aria-controls="checkPayment">
                                                Cash on delivery  <%=cartData.totalPrice>2000?" (Not available)":''%>
                                                
                                                </label>


                                        </div>

                                        <div class="custome-radio">
                                            <input class="form-check-input" required="" type="radio"
                                                onclick="handlePaymentMethod(this,'razorpay')" name="payment_option"
                                                id="exampleRadios5" value="razorpay">
                                            <label class="form-check-label" for="exampleRadios5"
                                                data-bs-toggle="collapse" data-target="#paypal"
                                                aria-controls="paypal">Razorpay</label>
                                        </div>

                                        <div class="custome-radio">
                                            <input class="form-check-input" required="" type="radio"
                                                onclick="handlePaymentMethod(this,'wallet')" name="payment_option"
                                                id="exampleRadios6" value="wallet">
                                            <label class="form-check-label" for="exampleRadios6"
                                                data-bs-toggle="collapse" data-target="#walletPayment"
                                                aria-controls="walletPayment">Wallet</label>
                                        </div>
                                    </div>

                                </div>
                                <a onclick="placeOrder('<%=cartData?cartData._id:null%>')"
                                    class="btn btn-fill-out btn-block mt-30">Place Order</a>
                            </div>
                        </div>
                    </div>

                </div>
                </div>
            </section>
        </main>
        <%-include('footer')%>
            <!-- Preloader Start -->
            <div id="preloader-active">
                <div class="preloader d-flex align-items-center justify-content-center">
                    <div class="preloader-inner position-relative">
                        <div class="text-center">
                            <h5 class="mb-5">Now Loading</h5>
                            <div class="loader">
                                <div class="bar bar1"></div>
                                <div class="bar bar2"></div>
                                <div class="bar bar3"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!--View more button of address selection -->
            <script>
                async function changeViewBtnTxt() {
                    let viewMoreBtn = document.getElementById('viewmoreBtnId');
                    let viewMoreBtnTxt = viewMoreBtn.innerText.trim(); // Use trim() to remove any extra spaces around the text

                    if (viewMoreBtnTxt.startsWith('View More')) {
                        viewMoreBtn.innerHTML = 'View Less <i class="fas fa-angle-double-up"></i>';
                    } else {
                        viewMoreBtn.innerHTML = 'View More <i class="fas fa-angle-double-down"></i>';
                    }
                }

            </script>

            <script>
                // Coupon priceId, totalPriceId and code
                const couponPriceId = document.getElementById('couponPriceId')
                const totalPriceId = document.getElementById('totalPriceId')

                // couponDiscount amount
                let couponDiscount

                // Address selection
                let selectedAddressId = ''
                const radioBtn = document.querySelectorAll('.radioBtn')
                radioBtn.forEach(element => {
                    if (element.checked) {
                        selectedAddressId = element.value;
                    }
                })
                async function handleSelectAddress(checkbox, addressId) {
                    if (checkbox.checked) {
                        selectedAddressId = addressId
                    }
                }

                //Default payment selection
                let paymentMethod
                const paymentRadio = document.querySelectorAll('.form-check-input')
                paymentRadio.forEach((element) => {
                    if (element.checked) {
                        paymentMethod = element.value
                    }
                })

                // Payment selection by user
                async function handlePaymentMethod(checkbox, payMethod) {
                    try {
                        if (checkbox.checked) {
                            paymentMethod = payMethod
                        }
                        console.log('paymentMethod=', payMethod);
                    } catch (error) {
                        console.log(error);
                    }
                }

                // apply coupon
                async function applyCoupon() {
                    const applyCouponBtnId = document.getElementById('applyCouponBtnId')
                    const showCouponBtnId = document.getElementById('showCouponBtnId')
                    const removeCouponBtnId = document.getElementById('removeCouponBtnId')
                    const couponPriceRowId = document.getElementById('couponPriceRowId')

                    try {
                        const couponCode = couponCodeId.value
                        fetch("/checkout/apply_coupon", {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ couponCode })
                        })
                            .then(res => res.json())
                            .then((res) => {
                                if (res.success) {
                                    const Toast = Swal.mixin({
                                        toast: true,
                                        position: 'centre',
                                        iconColor: 'green',
                                        customClass: {
                                            popup: 'colored-toast',
                                        },
                                        showConfirmButton: false,
                                        timer: 1900,
                                        timerProgressBar: false,
                                    })
                                    Toast.fire({
                                        icon: 'success',
                                        title: res.message,
                                    })
                                        .then(res => res)
                                    applyCouponBtnId.style.display = 'none'
                                    showCouponBtnId.style.display = 'none'
                                    removeCouponBtnId.style.display = 'block'
                                    couponPriceRowId.style.display = 'contents'
                                    couponPriceId.innerText = res.discount
                                    couponDiscount = res.discount
                                    totalPriceId.innerText = res.totalPrice - res.discount
                                    couponCodeId.disabled = true
                                } else {
                                    const Toast = Swal.mixin({
                                        toast: true,
                                        position: 'centre',
                                        iconColor: 'red',
                                        customClass: {
                                            popup: 'colored-toast',
                                        },
                                        showConfirmButton: false,
                                        timer: 1900,
                                        timerProgressBar: false,
                                    })
                                    Toast.fire({
                                        icon: 'error',
                                        title: res.message,
                                    })
                                        .then(res => res)
                                }
                            })
                    } catch (error) {
                        console.log(error);
                    }
                }

                // Place order 
                async function placeOrder(cartId) {
                    const couponPriceRowId = document.getElementById('couponPriceRowId')
                    if (!selectedAddressId) {
                        const Toast = Swal.mixin({
                            toast: true,
                            position: 'centre',
                            iconColor: 'red',
                            customClass: {
                                popup: 'colored-toast',
                            },
                            showConfirmButton: false,
                            timer: 1900,
                            timerProgressBar: false,
                        })
                        Toast.fire({
                            icon: 'warning',
                            title: 'Address is not selected',
                        })
                    }

                    if (!paymentMethod) {
                        const Toast = Swal.mixin({
                            toast: true,
                            position: 'centre',
                            iconColor: 'red',
                            customClass: {
                                popup: 'colored-toast',
                            },
                            showConfirmButton: false,
                            timer: 1900,
                            timerProgressBar: false,
                        })
                        Toast.fire({
                            icon: 'warning',
                            title: 'Payment is not selected!',
                        })
                    }

                    fetch('/checkout', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            cartId,
                            selectedAddressId,
                            paymentMethod,
                            couponDiscount: couponDiscount ? couponDiscount : null,
                            couponCode: couponCodeId.value ? couponCodeId.value : null,
                            totalPrice: totalPriceId.innerText
                        })
                    })
                        .then((res) => {
                            return res.json()
                        })
                        .then(async (res) => {
                            try {
                                if (res.success == false) {
                                    window.location.href = '/viewcart';
                                }
                                else if (res.outOfStock) {
                                    console.log(res);
                                    const proRowId = document.getElementById('product' + res.proId);
                                    await Swal.fire({
                                        title: 'Product out of stock',
                                        text: `${res.message} is out of stock. Remove it from the cart. Click OK to continue.`,
                                        icon: 'info',
                                        confirmButtonText: 'OK'
                                    }).then((result) => {
                                        if (result.isConfirmed) {
                                            window.location.href = '/viewcart';
                                        }
                                    });
                                }
                                else if (res.success) {
                                    let timerInterval;
                                    Swal.fire({
                                        title: "Processing",
                                        html: "<b></b>",
                                        timer: 2000,
                                        timerProgressBar: true,
                                        didOpen: () => {
                                            Swal.showLoading();
                                            const timer = Swal.getPopup().querySelector("b");
                                            timerInterval = setInterval(() => {
                                                timer.textContent = `${Swal.getTimerLeft()}`;
                                            }, 100);
                                        },
                                        willClose: () => {
                                            clearInterval(timerInterval);
                                        }
                                    }).then((result) => {
                                        if (result.dismiss === Swal.DismissReason.timer) {
                                            window.location.href = '/checkout/orderSuccess';
                                        }
                                    });
                                }
                                else if (res.status == 'razorpay') {
                                    razorPayment(res);
                                }
                                else if (!res.wallet) {
                                    const Toast = Swal.mixin({
                                        toast: true,
                                        position: 'center',
                                        iconColor: 'red',
                                        customClass: {
                                            popup: 'colored-toast',
                                        },
                                        showConfirmButton: false,
                                        timer: 1900,
                                        timerProgressBar: false,
                                    });
                                    Toast.fire({
                                        icon: 'warning',
                                        title: res.message,
                                    });
                                }
                                else {
                                    throw new Error('Error while placing order in cash on delivery');
                                }
                            } catch (error) {
                                console.error(error);
                                await Swal.fire({
                                    title: 'Error',
                                    text: 'An error occurred while processing your request.',
                                    icon: 'error',
                                    confirmButtonText: 'OK'
                                });
                            }
                        });

                }

                function razorPayment(paymentOrder) {
                    var options = {
                        "key": "rzp_test_m0dRXZ082qPP0X", // Enter the Key ID generated from the Dashboard
                        "amount": paymentOrder.order.amount, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
                        "currency": "INR",
                        "name": "Sleek Style", //your business name
                        "description": "Order payment",

                        "order_id": paymentOrder.order.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1
                        "callback_url": "https://eneqd3r9zrjok.x.pipedream.net/",
                        "handler": async function (response) {
                            await verifyPayment(response, paymentOrder.order, paymentOrder.cartData, paymentOrder)
                        },
                        "prefill": { //We recommend using the prefill parameter to auto-fill customer's contact information especially their phone number
                            "name": paymentOrder.address.name, //your customer's name
                            "email": paymentOrder.email,
                            "contact": paymentOrder.address.mobile //Provide the customer's phone number for better conversion rates 
                        },
                        "notes": {
                            "address": "Razorpay Corporate Office"
                        },
                        "theme": {
                            "color": "#00000"
                        }
                    };
                    const rzp = new Razorpay(options)
                    rzp.on('payment.failed', async function (response) {
                        if (response) {
                            fetch('/checkout/paymentFailed', {
                                method: 'put',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({ response, order: paymentOrder.order, cartData: paymentOrder.cartData, paymentOrder })
                            })
                                .then(res => res.json())
                                .then((res) => {
                                    Swal.fire({
                                        title: "Payment failed!",
                                        text: "Order has been successfully placed!",
                                        icon: "error",
                                        showCancelButton: false,
                                        confirmButtonColor: "#088178",
                                        confirmButtonText: "Ok"
                                    }).then((result) => {
                                        if (result) {
                                            window.location.href = "/checkout/orderSuccess";
                                        }
                                    });
                                })
                        }
                    });
                    rzp.open()
                }

                function verifyPayment(payment, order, cartData, paymentOrder) {
                    fetch('/verify-payment', {
                        method: 'post',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ payment, order, cartData, paymentOrder })
                    })
                        .then(res => res.json())
                        .then((res) => {
                            if (res.paymentSuccess) {
                                Swal.fire({
                                    title: "Payment success!",
                                    text: "Order has been successfully placed!",
                                    icon: "success",
                                    showCancelButton: false,
                                    confirmButtonColor: "#088178",
                                    confirmButtonText: "Ok"
                                }).then((result) => {
                                    if (result) {
                                        window.location.href = "/checkout/orderSuccess";
                                    }
                                });
                            }

                        })
                }
            </script>

            <!-- Custom JS for coupon modal window -->
            <script>
                document.addEventListener('DOMContentLoaded', function () {
                    const copyButtons = document.querySelectorAll('.copy-btn');
                    copyButtons.forEach(button => {
                        button.addEventListener('click', function () {
                            console.log('copyBtn:', copyButtons);
                            const couponCode = this.getAttribute('data-coupon');
                            navigator.clipboard.writeText(couponCode).then(() => {
                                alert(`Coupon code ${couponCode} copied to clipboard`);
                            }).catch(err => {
                                console.error('Failed to copy text: ', err);
                            });
                        });
                    });
                });
            </script>


            <!-- Vendor JS-->
            <script src="/public/userAssets/assets/js/vendor/modernizr-3.6.0.min.js"></script>
            <script src="/public/userAssets/assets/js/vendor/jquery-3.6.0.min.js"></script>
            <script src="/public/userAssets/assets/js/vendor/jquery-migrate-3.3.0.min.js"></script>
            <script src="/public/userAssets/assets/js/vendor/bootstrap.bundle.min.js"></script>
            <script src="/public/userAssets/assets/js/plugins/slick.js"></script>
            <script src="/public/userAssets/assets/js/plugins/jquery.syotimer.min.js"></script>
            <script src="/public/userAssets/assets/js/plugins/wow.js"></script>
            <script src="/public/userAssets/assets/js/plugins/jquery-ui.js"></script>
            <script src="/public/userAssets/assets/js/plugins/perfect-scrollbar.js"></script>
            <script src="/public/userAssets/assets/js/plugins/magnific-popup.js"></script>
            <script src="/public/userAssets/assets/js/plugins/select2.min.js"></script>
            <script src="/public/userAssets/assets/js/plugins/waypoints.js"></script>
            <script src="/public/userAssets/assets/js/plugins/counterup.js"></script>
            <script src="/public/userAssets/assets/js/plugins/jquery.countdown.min.js"></script>
            <script src="/public/userAssets/assets/js/plugins/images-loaded.js"></script>
            <script src="/public/userAssets/assets/js/plugins/isotope.js"></script>
            <script src="/public/userAssets/assets/js/plugins/scrollup.js"></script>
            <script src="/public/userAssets/assets/js/plugins/jquery.vticker-min.js"></script>
            <!-- Template  JS -->
            <script src="/public/userAssets/assets/js/maind134.js?v=3.4"></script>
            <script src="/public/userAssets/assets/js/shopd134.js?v=3.4"></script>
</body>

<style>

</style>
<!-- Mirrored from wp.alithemes.com/html/evara/evara-frontend/shop-checkout.html by HTTrack Website Copier/3.x [XR&CO'2014], Sat, 15 Jul 2023 10:10:07 GMT -->

</html>